# Planning
## Beta (one fully playable campaign)
- Misc: 3
- Items content: 
- Aliens content:
- More mission objectives: 
- Level content:

## Next
- rework mission class so that it goes in the scene instead of in a prefab
  - campaign should be a scriptable object which basically just contains the names of each mission scene
  - the mission monobehaviours will be read from the scene instead of from the campaign object
  
- UI for ammo
  - Soldier.cs should keep track of ammo
  - header should display soldier current/max ammo 



## Alpha ToDo
- Add some proper icons for post mission reward summary
- add ability to scroll in item/soldier select screen

- Create more levels!
- Create more aliens!
- Create more weapons! (specifically level 2 and maybe 3 weapons)

## Beta ToDo
- Ammo and reloading!
- Other misc abilities (explosive weapon fire at ground)
- Exp system!
- Unlockable soldier abilities!
- Ship teleporter! (to replace fallen soldiers mid battle)
- Special abilities for aliens!

# Refactoring
- Store ArmourStats and WeaponStats objects on soldier actor, to avoid having to fetch them all the time

# Not Urgent

- Should current mission data such as alien spawn rates be stored in scene, since there is one scene for each mission anyway?
- Implement listing of alien possible attacks
- Show the possible attack locations in presenter
- Aliens should prioritise moving to squares where they can attack multiple soldiers at once
- Large aliens' sprites should appear over the top of smaller aliens, and they should be able to displace smaller aliens in order to get to soldiers (so player can't use smaller, less damaging aliens as shield against larger more damaging ones)

# Random Ideas

- Persistent flames from flame weapons
- Show damage chance above aliens heads?

# New Interactor Checklist
- add line from interactor into initializer
- add new property on controller to store the interactor
- add presenter script to scene
- *do implementation*
- create method in controller that calls interactor
- add any required inspector variables to presenter and controller

# Principles

- Clarity: How easy it is to see/find all the consequences of a given action
- Flexibility: How easy is it to add new functionality without altering existing classes
- Dependence: How difficult is it to change without breaking other parts of the application or preventing compilation
- Complexity: Does the benefit outweight the complexity that it introduces
- Tell Don't Ask
- Seperate Logic and Data


# First prompt
*Movement Phase*
The highlighted squares show where your soldier can move. Green squares show the area in which your soldier can move whilst still being able to shoot in the shooting phase. The arrows at each side of the screen allow you to manually set the soldiers orientation. The soldiers facing cannot be changed during the shooting phase, so choose wisely.

# Second prompt
When you're done moving, press the Continue button to advance to the shooting phase. 

# Third prompt
*Shooting Phase*
The shooting phase is when you can shoot, but it's also when the aliens will make their moves. Each alien will move 3 times, and before/after each move you will get a chance to shoot them if any of your soldiers are able to. If none of your soldiers can shoot, either because they've run out of shots or because they're facing the wrong way, then the aliens will move automatically. Otherwise, they will move when you press the Continue button.

Each soldier's available shots are displayed above their head. Clicking on a soldier will highlight their available targets in red. Then, click on a highlighted enemy to shoot.
